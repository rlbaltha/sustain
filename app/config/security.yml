# app/config/security.yml
security:
    firewalls:
        main:
            pattern: ^/
            trusted_sso:
                manager: admin_sso
                create_users: true
                created_users_roles: [ 'ROLE_USER' ]
                login_action: false
                logout_action: false
                login_path: /login
                check_path: /login
                failure_path: /register
            provider: fos_userbundle
            anonymous:    true
            switch_user: true
            logout:
              path:   /logout
              target: /home

    providers:
        chain_provider:
            chain:
                providers: [fos_userbundle]

        fos_userbundle:
            id: fos_user.user_provider.username

    encoders:
        FOS\UserBundle\Model\UserInterface: sha512


    access_control:

        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/home, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/user/[0-9]*/edit, role: ROLE_USER }
        - { path: edit$, role: ROLE_ADMIN }
        - { path: new$, role: ROLE_ADMIN }
        - { path: delete$, role: ROLE_ADMIN }
        - { path: create$, role: ROLE_ADMIN }
        - { path: update$, role: ROLE_ADMIN }
        - { path: ^/tag/, role: ROLE_ADMIN }
        - { path: ^/category/, role: ROLE_ADMIN }
        - { path: ^/user/, role: ROLE_ADMIN }





    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN     
        